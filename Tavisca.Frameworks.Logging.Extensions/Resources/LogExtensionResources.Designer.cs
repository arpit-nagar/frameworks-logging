//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tavisca.Frameworks.Logging.Extensions.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class LogExtensionResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal LogExtensionResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Tavisca.Frameworks.Logging.Extensions.Resources.LogExtensionResources", typeof(LogExtensionResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file path was not found for file logger. An appsetting configuration is missing where full file path is expected. Key expected was {0}..
        /// </summary>
        internal static string FileLogger_FilePath_NotFound {
            get {
                return ResourceManager.GetString("FileLogger_FilePath_NotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The LogSpecificAdapter does not support creation of type: {0}, with key provided: {1}.
        /// </summary>
        internal static string LogSpecificAdapter_TypeNotSupported {
            get {
                return ResourceManager.GetString("LogSpecificAdapter_TypeNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The ReflectionAdapter does not support searches on basis of type for Sinks (ISink), the key provided in the configuration of the logging framework must have a assembly qualified name of the logger implementation..
        /// </summary>
        internal static string ReflectionAdapter_TypeBased_NotSupported {
            get {
                return ResourceManager.GetString("ReflectionAdapter_TypeBased_NotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An unknown error occurred in the timer execution, check inner exception for details..
        /// </summary>
        internal static string Timer_UnknownError {
            get {
                return ResourceManager.GetString("Timer_UnknownError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The timer object became null, this might cause logs to not get flushed to the disk, resolve immediately..
        /// </summary>
        internal static string TimerGotNull {
            get {
                return ResourceManager.GetString("TimerGotNull", resourceCulture);
            }
        }
    }
}
